plugins {
    id "java"
    id "maven-publish"
    id "com.jfrog.bintray" version "1.4"
}

group = 'org.embulk'
version = "0.1.1"

repositories {
    mavenCentral()
}

sourceCompatibility = 1.7
targetCompatibility = 1.7
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

javadoc {
    options {
        locale = 'en_US'
        encoding = 'UTF-8'
    }
}

dependencies {
    compile 'com.google.inject:guice:4.0'
    testCompile 'org.testng:testng:6.9.9'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

test {
    useTestNG()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

// add tests/javadoc/source jar tasks as artifacts to be released
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        bintrayMavenRelease(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    // write at your bintray user name and api key to ~/.gradle/gradle.properties file:
    // bintray_user=xxxxxx
    // bintray_api_key=yyyyyyyyyyyy
    user = project.hasProperty('bintray_user') ? bintray_user : ''
    key = project.hasProperty('bintray_api_key') ? bintray_api_key : ''

    publications = ['bintrayMavenRelease']

    dryRun = false
    publish = false

    pkg {
        userOrg = 'embulk'
        repo = 'maven'
        name = 'guice-bootstrap'
        desc = 'Guice-bootstrap adds JSR 250 Life Cycle annotations to Google Guice'
        websiteUrl = 'http://guice.embulk.org/'
        issueTrackerUrl = 'https://github.com/embulk/guice-bootstrap/issues'
        vcsUrl = 'https://github.com/embulk/guice-bootstrap.git'
        licenses = ['Apache-2.0']
        labels = ['guice', 'inject', 'java']

        version {
            name = project.version
        }
    }
}

