{"name":"Guice-bootstrap","tagline":"Add JSR 250 Life Cycle annotations to Google Guice","body":"# Guice-bootstrap\r\n\r\nGouice-bootstrap is an extension of [Guice](https://github.com/google/guice) that adds support for JSR 250 Life Cycle annotations.\r\n\r\n**@PostConstruct** annotation is used on methods that need to get executed after dependency injection is done to perform any initialization.\r\n\r\n**@PreDestroy** annotation is used on methods that are called before the application shuts down.\r\n\r\n## PostConstruct\r\n\r\nMethods with `@PostConstruct` annotation are called after all depedency injection is done.\r\n\r\n```java\r\nimport javax.annotation.PostConstruct;\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\n\r\nclass MyService implements Runnable\r\n{\r\n    private final ExecutorService executor = Executors.newSingleThreadExecutor();\r\n\r\n    @PostConstruct\r\n    public void start() {\r\n        executor.submit(() -> { ... });\r\n    }\r\n}\r\n```\r\n\r\n## PreDestroy\r\n\r\nMethods with `@PreDestroy` annotation are called after the application shuts down.\r\n\r\n```java\r\nimport javax.annotation.PreDestroy;\r\nimport java.io.File;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nclass MyService implements Runnable\r\n{\r\n    private final List<File> files = new ArrayList<>();\r\n\r\n    @PreDestroy\r\n    public void cleanup() {\r\n        files.stream().forEach(file -> file.delete());\r\n    }\r\n}\r\n```\r\n\r\n## Bootstrap\r\n\r\n**Bootstrap** is the main class to use guice-bootstrap.\r\n\r\n```java\r\nInjector injector = new Bootstrap()\r\n    .addModules(new MyGuiceModule1(), new MyGuiceModule2(), ...)\r\n    .addModules(new MyGuiceModule3(), new MyGuiceModule4(), ...)\r\n    .initialize();\r\n```\r\n\r\n## CloseableInjector\r\n\r\n`Bootstrap.initialize()` sets up a shutdown hook to the Java VM (@Runtime.addShutdownHook`). It ensures that PostDestroy methods are called when Java VM exits even if it's killed by a SIGTERM or Ctrl-C.\r\n\r\nBut if you want to control the exact timing of shutdown, you can use `Bootstrap.initializeCloseable()` instead. It returns **CloseableInjector** which implements Injector and Closeable interfaces.\r\n\r\n```java\r\nBootstrap bootstrap = new Bootstrap()\r\n    .addModules(...);\r\n\r\ntry (CloseableInjector injector = bootstrap.initializeCloseable()) {\r\n    ...\r\n}\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}